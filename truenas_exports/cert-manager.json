{
  "catalog": "TRUECHARTS",
  "catalog_train": "system",
  "chart_metadata": {
    "annotations": {
      "max_scale_version": "24.04.1",
      "min_scale_version": "24.04.0",
      "truecharts.org/SCALE-support": "true",
      "truecharts.org/category": "operators",
      "truecharts.org/max_helm_version": "3.14",
      "truecharts.org/min_helm_version": "3.11",
      "truecharts.org/train": "system"
    },
    "apiVersion": "v2",
    "appVersion": "latest",
    "dependencies": [
      {
        "enabled": true,
        "name": "common",
        "repository": "oci://tccr.io/truecharts",
        "version": "23.0.0"
      },
      {
        "alias": "certmanager",
        "enabled": true,
        "name": "certmanager",
        "repository": "https://charts.jetstack.io",
        "version": "v1.14.5"
      }
    ],
    "description": "Cert-Manager is a kubernetes-aware certificate manager",
    "home": "https://truecharts.org/charts/system/cert-manager",
    "icon": "https://truecharts.org/img/hotlink-ok/chart-icons/cert-manager.webp",
    "keywords": [
      "cert-manager",
      "certificates",
      "security"
    ],
    "kubeVersion": "\u003e=1.24.0-0",
    "latest_chart_version": "5.0.4",
    "maintainers": [
      {
        "email": "info@truecharts.org",
        "name": "TrueCharts",
        "url": "https://truecharts.org"
      }
    ],
    "name": "cert-manager",
    "sources": [
      "https://github.com/cert-manager",
      "https://cert-manager.io/",
      "https://github.com/truecharts/charts/tree/master/charts/system/cert-manager",
      "https://github.com/truecharts/containers/tree/master/apps/scratch"
    ],
    "type": "application",
    "version": "5.0.4"
  },
  "config": {
    "certmanager": {
      "dns01RecursiveNameservers": "1.1.1.1:53,1.0.0.1:53",
      "dns01RecursiveNameserversOnly": false,
      "enableCertificateOwnerRef": true,
      "installCRDs": true,
      "prometheus": {
        "enabled": true,
        "servicemonitor": {
          "enabled": true
        }
      }
    },
    "configmap": {
      "dashboard": {
        "data": {
          "cert-manager.json": "{{ .Files.Get \"dashboard.json\" | indent 8 }}"
        },
        "enabled": true,
        "labels": {
          "grafana_dashboard": "1"
        }
      }
    },
    "credentialsList": [],
    "global": {
      "ixChartContext": {
        "addNvidiaRuntimeClass": false,
        "hasNFSCSI": true,
        "hasSMBCSI": true,
        "isInstall": false,
        "isStopped": false,
        "isUpdate": true,
        "isUpgrade": false,
        "kubernetes_config": {
          "cluster_cidr": "172.16.0.0/16",
          "cluster_dns_ip": "172.17.0.10",
          "service_cidr": "172.17.0.0/16"
        },
        "nfsProvisioner": "nfs.csi.k8s.io",
        "nvidiaRuntimeClassName": "nvidia",
        "operation": "UPDATE",
        "smbProvisioner": "smb.csi.k8s.io",
        "storageClassName": "ix-storage-class-cert-manager",
        "upgradeMetadata": {}
      },
      "stopAll": false
    },
    "image": {
      "pullPolicy": "IfNotPresent",
      "repository": "tccr.io/tccr/scratch",
      "tag": "latest@sha256:ef27d569e535092ec48e3c86502b31e482f392508964d6068b5558a75d43287e"
    },
    "ixCertificateAuthorities": {},
    "ixCertificates": {},
    "ixChartContext": {
      "addNvidiaRuntimeClass": false,
      "hasNFSCSI": true,
      "hasSMBCSI": true,
      "isInstall": false,
      "isStopped": false,
      "isUpdate": true,
      "isUpgrade": false,
      "kubernetes_config": {
        "cluster_cidr": "172.16.0.0/16",
        "cluster_dns_ip": "172.17.0.10",
        "service_cidr": "172.17.0.0/16"
      },
      "nfsProvisioner": "nfs.csi.k8s.io",
      "nvidiaRuntimeClassName": "nvidia",
      "operation": "UPDATE",
      "smbProvisioner": "smb.csi.k8s.io",
      "storageClassName": "ix-storage-class-cert-manager",
      "upgradeMetadata": {}
    },
    "ixExternalInterfacesConfiguration": [],
    "ixExternalInterfacesConfigurationNames": [],
    "ixVolumes": [],
    "operator": {
      "register": true
    },
    "portal": {
      "open": {
        "enabled": false
      }
    },
    "release_name": "cert-manager",
    "service": {
      "main": {
        "enabled": false,
        "ports": {
          "main": {
            "enabled": false
          }
        }
      }
    },
    "workload": {
      "main": {
        "enabled": false
      }
    }
  },
  "container_images_update_available": false,
  "dataset": "HomeNas/ix-applications/releases/cert-manager",
  "hooks": [
    {
      "delete_policies": [
        "before-hook-creation",
        "hook-succeeded"
      ],
      "events": [
        "post-install"
      ],
      "kind": "ServiceAccount",
      "last_run": {
        "completed_at": "",
        "phase": "",
        "started_at": ""
      },
      "manifest": "apiVersion: v1\nkind: ServiceAccount\nautomountServiceAccountToken: true\nmetadata:\n  name: cert-manager-certmanager-startupapicheck\n  namespace: ix-cert-manager\n  annotations:\n    helm.sh/hook: post-install\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n    helm.sh/hook-weight: \"-5\"\n  labels:\n    app: startupapicheck\n    app.kubernetes.io/name: startupapicheck\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"startupapicheck\"\n    app.kubernetes.io/version: \"v1.14.5\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: certmanager-v1.14.5",
      "name": "cert-manager-certmanager-startupapicheck",
      "path": "cert-manager/charts/certmanager/templates/startupapicheck-serviceaccount.yaml",
      "weight": -5
    },
    {
      "delete_policies": [
        "before-hook-creation",
        "hook-succeeded"
      ],
      "events": [
        "post-install"
      ],
      "kind": "Role",
      "last_run": {
        "completed_at": "",
        "phase": "",
        "started_at": ""
      },
      "manifest": "# create certificate role\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: cert-manager-certmanager-startupapicheck:create-cert\n  namespace: ix-cert-manager\n  labels:\n    app: startupapicheck\n    app.kubernetes.io/name: startupapicheck\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"startupapicheck\"\n    app.kubernetes.io/version: \"v1.14.5\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: certmanager-v1.14.5\n  annotations:\n    helm.sh/hook: post-install\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n    helm.sh/hook-weight: \"-5\"\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates\"]\n    verbs: [\"create\"]",
      "name": "cert-manager-certmanager-startupapicheck:create-cert",
      "path": "cert-manager/charts/certmanager/templates/startupapicheck-rbac.yaml",
      "weight": -5
    },
    {
      "delete_policies": [
        "before-hook-creation",
        "hook-succeeded"
      ],
      "events": [
        "post-install"
      ],
      "kind": "RoleBinding",
      "last_run": {
        "completed_at": "",
        "phase": "",
        "started_at": ""
      },
      "manifest": "apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: cert-manager-certmanager-startupapicheck:create-cert\n  namespace: ix-cert-manager\n  labels:\n    app: startupapicheck\n    app.kubernetes.io/name: startupapicheck\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"startupapicheck\"\n    app.kubernetes.io/version: \"v1.14.5\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: certmanager-v1.14.5\n  annotations:\n    helm.sh/hook: post-install\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n    helm.sh/hook-weight: \"-5\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: cert-manager-certmanager-startupapicheck:create-cert\nsubjects:\n  - kind: ServiceAccount\n    name: cert-manager-certmanager-startupapicheck\n    namespace: ix-cert-manager",
      "name": "cert-manager-certmanager-startupapicheck:create-cert",
      "path": "cert-manager/charts/certmanager/templates/startupapicheck-rbac.yaml",
      "weight": -5
    },
    {
      "delete_policies": [
        "before-hook-creation",
        "hook-succeeded"
      ],
      "events": [
        "post-install"
      ],
      "kind": "Job",
      "last_run": {
        "completed_at": "",
        "phase": "",
        "started_at": ""
      },
      "manifest": "apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: cert-manager-certmanager-startupapicheck\n  namespace: ix-cert-manager\n  labels:\n    app: startupapicheck\n    app.kubernetes.io/name: startupapicheck\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"startupapicheck\"\n    app.kubernetes.io/version: \"v1.14.5\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: certmanager-v1.14.5\n  annotations:\n    helm.sh/hook: post-install\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n    helm.sh/hook-weight: \"1\"\nspec:\n  backoffLimit: 4\n  template:\n    metadata:\n      labels:\n        app: startupapicheck\n        app.kubernetes.io/name: startupapicheck\n        app.kubernetes.io/instance: cert-manager\n        app.kubernetes.io/component: \"startupapicheck\"\n        app.kubernetes.io/version: \"v1.14.5\"\n        app.kubernetes.io/managed-by: Helm\n        helm.sh/chart: certmanager-v1.14.5\n    spec:\n      restartPolicy: OnFailure\n      serviceAccountName: cert-manager-certmanager-startupapicheck\n      enableServiceLinks: false\n      securityContext:\n        runAsNonRoot: true\n        seccompProfile:\n          type: RuntimeDefault\n      containers:\n        - name: certmanager-startupapicheck\n          image: \"quay.io/jetstack/cert-manager-startupapicheck:v1.14.5\"\n          imagePullPolicy: IfNotPresent\n          args:\n          - check\n          - api\n          - --wait=1m\n          - -v\n          securityContext:\n            allowPrivilegeEscalation: false\n            capabilities:\n              drop:\n              - ALL\n            readOnlyRootFilesystem: true\n      nodeSelector:\n        kubernetes.io/os: linux",
      "name": "cert-manager-certmanager-startupapicheck",
      "path": "cert-manager/charts/certmanager/templates/startupapicheck-job.yaml",
      "weight": 1
    }
  ],
  "human_latest_version": "5.0.4",
  "human_version": "latest_5.0.4",
  "id": "cert-manager",
  "info": {
    "deleted": "",
    "description": "Upgrade complete",
    "first_deployed": "2024-01-18T10:31:46.644940837-05:00",
    "last_deployed": "2025-03-11T12:43:08.307245265-04:00",
    "notes": "\n# Thank you for installing cert-manager by TrueCharts.\n\n\n## Sources for cert-manager\n- https://github.com/cert-manager\n- https://cert-manager.io/\n- https://github.com/truecharts/charts/tree/master/charts/system/cert-manager\n- https://github.com/truecharts/containers/tree/master/apps/scratch\n\nSee more for **cert-manager** at (https://truecharts.org/charts/system/cert-manager)\n\n## Documentation\nPlease check out the TrueCharts documentation on:\nhttps://truecharts.org\n\nOpenSource can only exist with your help, please consider supporting TrueCharts:\nhttps://truecharts.org/sponsor\n",
    "status": "deployed"
  },
  "name": "cert-manager",
  "namespace": "ix-cert-manager",
  "path": "/mnt/HomeNas/ix-applications/releases/cert-manager",
  "pod_status": {
    "available": 3,
    "desired": 3
  },
  "portals": {},
  "status": "ACTIVE",
  "update_available": false,
  "used_ports": [],
  "version": 22
}