{
  "catalog": "TRUECHARTS",
  "catalog_train": "premium",
  "chart_metadata": {
    "annotations": {
      "truecharts.org/category": "metrics",
      "truecharts.org/max_helm_version": "3.14",
      "truecharts.org/min_helm_version": "3.11",
      "truecharts.org/train": "premium"
    },
    "apiVersion": "v2",
    "appVersion": "2.52.0",
    "dependencies": [
      {
        "enabled": true,
        "name": "common",
        "repository": "oci://tccr.io/truecharts",
        "version": "23.0.10"
      },
      {
        "alias": "kps",
        "enabled": true,
        "name": "kps",
        "repository": "oci://ghcr.io/prometheus-community/charts",
        "version": "56.21.4"
      }
    ],
    "description": "kube-prometheus-stack collects Kubernetes manifests, Grafana dashboards, and Prometheus rules combined with documentation and scripts to provide easy to operate end-to-end Kubernetes cluster monitoring with Prometheus using the Prometheus Operator.",
    "home": "https://truecharts.org/charts/premium/prometheus",
    "icon": "https://truecharts.org/img/hotlink-ok/chart-icons/prometheus.webp",
    "keywords": [
      "metrics"
    ],
    "kubeVersion": "\u003e=1.24.0-0",
    "latest_chart_version": "18.2.9",
    "maintainers": [
      {
        "email": "info@truecharts.org",
        "name": "TrueCharts",
        "url": "https://truecharts.org"
      }
    ],
    "name": "prometheus",
    "sources": [
      "https://github.com/prometheus-community/helm-charts",
      "https://github.com/prometheus-operator/kube-prometheus",
      "https://github.com/truecharts/charts/tree/master/charts/premium/prometheus",
      "https://hub.docker.com/r/bitnami/alertmanager",
      "https://hub.docker.com/r/bitnami/prometheus",
      "https://quay.io/thanos/thanos"
    ],
    "type": "application",
    "version": "18.2.9"
  },
  "config": {
    "alertmanager": {
      "additionalPeers": [],
      "affinity": {},
      "config": {
        "global": {
          "resolve_timeout": "5m"
        },
        "receivers": [
          {
            "name": "null"
          }
        ],
        "route": {
          "group_by": [
            "job"
          ],
          "group_interval": "5m",
          "group_wait": "30s",
          "receiver": "null",
          "repeat_interval": "12h",
          "routes": [
            {
              "match": {
                "alertname": "Watchdog"
              },
              "receiver": "null"
            }
          ]
        }
      },
      "configMaps": [],
      "configNamespaceSelector": {},
      "configSelector": {},
      "containerSecurityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": {
          "drop": [
            "ALL"
          ]
        },
        "enabled": true,
        "readOnlyRootFilesystem": false,
        "runAsNonRoot": true
      },
      "containers": [],
      "enabled": true,
      "externalConfig": false,
      "externalUrl": "",
      "listenLocal": false,
      "livenessProbe": {
        "enabled": true,
        "failureThreshold": 120,
        "initialDelaySeconds": 0,
        "path": "/-/healthy",
        "periodSeconds": 5,
        "successThreshold": 1,
        "timeoutSeconds": 3
      },
      "logFormat": "logfmt",
      "logLevel": "info",
      "nodeAffinityPreset": {
        "key": "",
        "type": "",
        "values": []
      },
      "nodeSelector": {},
      "paused": false,
      "persistence": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "enabled": true,
        "size": "999Gi",
        "storageClass": ""
      },
      "podAffinityPreset": "",
      "podAntiAffinityPreset": "soft",
      "podDisruptionBudget": {
        "enabled": false,
        "maxUnavailable": "",
        "minAvailable": 1
      },
      "podMetadata": {
        "annotations": {},
        "labels": {}
      },
      "podSecurityContext": {
        "enabled": true,
        "fsGroup": 1001,
        "runAsUser": 1001
      },
      "portName": "alertmanager",
      "priorityClassName": "",
      "readinessProbe": {
        "enabled": true,
        "failureThreshold": 120,
        "initialDelaySeconds": 0,
        "path": "/-/ready",
        "periodSeconds": 5,
        "successThreshold": 1,
        "timeoutSeconds": 3
      },
      "replicaCount": 1,
      "resources": {},
      "retention": "240h",
      "routePrefix": "/",
      "secrets": [],
      "serviceAccount": {
        "create": true,
        "name": ""
      },
      "serviceMonitor": {
        "enabled": true,
        "interval": "",
        "metricRelabelings": [],
        "relabelings": []
      },
      "storageSpec": {},
      "tolerations": [],
      "volumeMounts": [],
      "volumes": []
    },
    "alertmanagerImage": {
      "repository": "bitnami/alertmanager",
      "tag": "0.27.0@sha256:fa86a659f22a216b8cc8452aeb10f722e7cc8d1b549744b173eb48d819359349"
    },
    "configmap": {
      "grafana-datasource": {
        "data": {
          "datasource.yaml": "apiVersion: 1\ndatasources:\n- name: Prometheus\n  type: prometheus\n  uid: {{ .Values.grafana.datasource.uid | default \"prometheus\" }}\n  url: http://{{ include \"tc.v1.common.lib.chart.names.fullname\" $ }}.{{ include \"tc.v1.common.lib.metadata.namespace\" (dict \"rootCtx\" $ \"objectData\" . \"caller\" \"Configmap\") }}:{{ .Values.service.main.ports.main.port }}\n  access: proxy\n  isDefault: {{ .Values.grafana.datasource.default | default true }}\n  jsonData:\n    httpMethod: {{ .Values.grafana.datasource.httpMethod | default \"POST\" }}\n    timeInterval: {{ .Values.grafana.datasource.scrapeInterval | default \"30s\" }}\n    {{- if .Values.grafana.datasource.timeout }}\n    timeout: {{ .Values.grafana.datasource.timeout }}\n    {{- end }}"
        },
        "enabled": "{{ if .Values.grafana.datasource.enabled }}true{{ else }}false{{ end }}",
        "labels": {
          "grafana_datasources": "1"
        }
      }
    },
    "env": {
      "PROMETHEUS_CONFIG_RELOADER": {
        "configMapKeyRef": {
          "key": "prometheus-config-reloader",
          "name": "prometheus-operator-config"
        }
      }
    },
    "exporters": {
      "kube-state-metrics": {
        "enabled": true
      },
      "node-exporter": {
        "enabled": true
      }
    },
    "global": {
      "ixChartContext": {
        "addNvidiaRuntimeClass": false,
        "hasNFSCSI": true,
        "hasSMBCSI": true,
        "isInstall": false,
        "isStopped": false,
        "isUpdate": true,
        "isUpgrade": false,
        "kubernetes_config": {
          "cluster_cidr": "172.16.0.0/16",
          "cluster_dns_ip": "172.17.0.10",
          "service_cidr": "172.17.0.0/16"
        },
        "nfsProvisioner": "nfs.csi.k8s.io",
        "nvidiaRuntimeClassName": "nvidia",
        "operation": "UPDATE",
        "smbProvisioner": "smb.csi.k8s.io",
        "storageClassName": "ix-storage-class-prometheus",
        "upgradeMetadata": {}
      },
      "labels": {}
    },
    "grafana": {
      "datasource": {
        "default": true,
        "enabled": true,
        "httpMethod": "POST",
        "scrapeInterval": "30s",
        "uid": "prometheus"
      }
    },
    "image": {
      "repository": "bitnami/prometheus",
      "tag": "2.52.0@sha256:b1f3e9fbfb64d025cc5b68a46dbbb713a02367ad3ebee029f6fd50299268ec67"
    },
    "ingress": {
      "alertmanager": {
        "enabled": false
      },
      "main": {
        "enabled": false
      },
      "thanos": {
        "enabled": false
      }
    },
    "ingressList": [],
    "ixCertificateAuthorities": {},
    "ixCertificates": {},
    "ixChartContext": {
      "addNvidiaRuntimeClass": false,
      "hasNFSCSI": true,
      "hasSMBCSI": true,
      "isInstall": false,
      "isStopped": false,
      "isUpdate": true,
      "isUpgrade": false,
      "kubernetes_config": {
        "cluster_cidr": "172.16.0.0/16",
        "cluster_dns_ip": "172.17.0.10",
        "service_cidr": "172.17.0.0/16"
      },
      "nfsProvisioner": "nfs.csi.k8s.io",
      "nvidiaRuntimeClassName": "nvidia",
      "operation": "UPDATE",
      "smbProvisioner": "smb.csi.k8s.io",
      "storageClassName": "ix-storage-class-prometheus",
      "upgradeMetadata": {}
    },
    "ixExternalInterfacesConfiguration": [],
    "ixExternalInterfacesConfigurationNames": [],
    "ixVolumes": [],
    "kps": {
      "alertmanager": {
        "enabled": false
      },
      "coreDns": {
        "enabled": true
      },
      "crds": {
        "enabled": false
      },
      "defaultRules": {
        "create": true
      },
      "global": {
        "rbac": {
          "create": true
        }
      },
      "grafana": {
        "defaultDashboardsEnabled": true,
        "enabled": false,
        "forceDeployDashboards": true
      },
      "kubeApiServer": {
        "enabled": true
      },
      "kubeControllerManager": {
        "enabled": true
      },
      "kubeDns": {
        "enabled": false
      },
      "kubeEtcd": {
        "enabled": true
      },
      "kubeProxy": {
        "enabled": false
      },
      "kubeScheduler": {
        "enabled": true
      },
      "kubeStateMetrics": {
        "enabled": true
      },
      "kubelet": {
        "enabled": true
      },
      "kubernetesServiceMonitors": {
        "enabled": true
      },
      "nodeExporter": {
        "enabled": true
      },
      "prometheus": {
        "enabled": false
      },
      "prometheus-windows-exporter": {
        "prometheus": {
          "monitor": {
            "enabled": false
          }
        }
      },
      "prometheusOperator": {
        "enabled": false
      },
      "thanosRuler": {
        "enabled": false
      },
      "windowsMonitoring": {
        "enabled": false
      }
    },
    "networkPolicy": [],
    "operator": {
      "enabled": true,
      "logLevel": "info",
      "prometheusConfigReloader": {
        "containerSecurityContext": {
          "allowPrivilegeEscalation": false,
          "capabilities": {
            "drop": [
              "ALL"
            ]
          },
          "enabled": true,
          "readOnlyRootFilesystem": false,
          "runAsNonRoot": true
        },
        "livenessProbe": {
          "enabled": true,
          "failureThreshold": 6,
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "successThreshold": 1,
          "timeoutSeconds": 5
        },
        "readinessProbe": {
          "enabled": true,
          "failureThreshold": 6,
          "initialDelaySeconds": 15,
          "periodSeconds": 20,
          "successThreshold": 1,
          "timeoutSeconds": 5
        }
      },
      "serviceMonitor": {
        "enabled": false,
        "interval": "",
        "metricRelabelings": [],
        "relabelings": []
      }
    },
    "persistenceList": [],
    "podOptions": {
      "automountServiceAccountToken": true
    },
    "portal": {
      "open": {
        "enabled": true
      }
    },
    "probes": {
      "liveness": {
        "custom": true,
        "spec": {
          "httpGet": {
            "path": "/metrics",
            "port": "promop",
            "scheme": "HTTP"
          }
        }
      },
      "readiness": {
        "custom": true,
        "spec": {
          "httpGet": {
            "path": "/metrics",
            "port": "promop",
            "scheme": "HTTP"
          }
        }
      },
      "startup": {
        "custom": true,
        "spec": {
          "httpGet": {
            "path": "/metrics",
            "port": "promop",
            "scheme": "HTTP"
          }
        }
      }
    },
    "prometheus": {
      "additionalAlertRelabelConfigsExternal": {
        "enabled": false,
        "key": "",
        "name": ""
      },
      "additionalPrometheusRules": [],
      "additionalScrapeConfigs": {
        "enabled": false,
        "external": {
          "key": "",
          "name": ""
        },
        "internal": {
          "jobList": []
        },
        "type": "external"
      },
      "additionalScrapeConfigsExternal": {
        "enabled": false,
        "key": "",
        "name": ""
      },
      "affinity": {},
      "alertingEndpoints": [],
      "configMaps": [],
      "containerSecurityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": {
          "drop": [
            "ALL"
          ]
        },
        "enabled": true,
        "readOnlyRootFilesystem": false,
        "runAsNonRoot": true
      },
      "containers": [],
      "disableCompaction": false,
      "enableAdminAPI": false,
      "enableFeatures": [],
      "enableRemoteWriteReceiver": false,
      "enabled": true,
      "evaluationInterval": "30s",
      "externalLabels": {},
      "externalUrl": "",
      "listenLocal": false,
      "livenessProbe": {
        "enabled": true,
        "failureThreshold": 10,
        "initialDelaySeconds": 0,
        "path": "/-/healthy",
        "periodSeconds": 10,
        "successThreshold": 1,
        "timeoutSeconds": 3
      },
      "logFormat": "logfmt",
      "logLevel": "info",
      "matchLabels": {},
      "nodeAffinityPreset": {
        "key": "",
        "type": "",
        "values": []
      },
      "nodeSelector": {},
      "paused": false,
      "persistence": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "enabled": true,
        "size": "999Gi",
        "storageClass": ""
      },
      "podAffinityPreset": "",
      "podAntiAffinityPreset": "soft",
      "podMetadata": {
        "annotations": {},
        "labels": {}
      },
      "podMonitorNamespaceSelector": {},
      "podMonitorSelector": {},
      "podSecurityContext": {
        "enabled": true,
        "fsGroup": 1001,
        "runAsUser": 1001
      },
      "portName": "main",
      "priorityClassName": "",
      "probeNamespaceSelector": {},
      "probeSelector": {},
      "prometheusExternalLabelName": "",
      "prometheusExternalLabelNameClear": false,
      "querySpec": {},
      "readinessProbe": {
        "enabled": true,
        "failureThreshold": 10,
        "initialDelaySeconds": 0,
        "path": "/-/ready",
        "periodSeconds": 10,
        "successThreshold": 1,
        "timeoutSeconds": 3
      },
      "remoteRead": [],
      "remoteWrite": [],
      "replicaCount": 1,
      "replicaExternalLabelName": "",
      "replicaExternalLabelNameClear": false,
      "resources": {},
      "retention": "31d",
      "retentionSize": "",
      "routePrefix": "/",
      "ruleNamespaceSelector": {},
      "ruleSelector": {},
      "scrapeConfigNamespaceSelector": {},
      "scrapeConfigSelector": {},
      "scrapeInterval": "15s",
      "secrets": [],
      "serviceAccount": {
        "annotations": {},
        "create": true,
        "name": ""
      },
      "serviceMonitor": {
        "enabled": true,
        "interval": "",
        "metricRelabelings": [],
        "relabelings": []
      },
      "serviceMonitorNamespaceSelector": {},
      "serviceMonitorSelector": {},
      "storageSpec": {},
      "thanos": {
        "containerSecurityContext": {
          "allowPrivilegeEscalation": false,
          "capabilities": {
            "drop": [
              "ALL"
            ]
          },
          "enabled": true,
          "readOnlyRootFilesystem": false,
          "runAsNonRoot": true
        },
        "create": false,
        "extraArgs": [],
        "extraVolumeMounts": [],
        "livenessProbe": {
          "enabled": true,
          "failureThreshold": 120,
          "initialDelaySeconds": 0,
          "path": "/-/healthy",
          "periodSeconds": 5,
          "successThreshold": 1,
          "timeoutSeconds": 3
        },
        "objectStorageConfig": {},
        "prometheusUrl": "",
        "readinessProbe": {
          "enabled": true,
          "failureThreshold": 120,
          "initialDelaySeconds": 0,
          "path": "/-/ready",
          "periodSeconds": 5,
          "successThreshold": 1,
          "timeoutSeconds": 3
        },
        "resources": {
          "limits": {},
          "requests": {}
        },
        "service": {
          "annotations": {},
          "clusterIP": "None",
          "extraPorts": [],
          "loadBalancerIP": "",
          "loadBalancerSourceRanges": [],
          "nodePort": "",
          "port": 10901,
          "type": "ClusterIP"
        }
      },
      "tolerations": [],
      "volumeMounts": [],
      "volumes": [],
      "walCompression": false
    },
    "rbac": {
      "main": {
        "clusterWide": true,
        "enabled": true,
        "primary": true,
        "rules": [
          {
            "apiGroups": [
              "apiextensions.k8s.io"
            ],
            "resources": [
              "customresourcedefinitions"
            ],
            "verbs": [
              "create"
            ]
          },
          {
            "apiGroups": [
              "apiextensions.k8s.io"
            ],
            "resourceNames": [
              "alertmanagers.monitoring.coreos.com",
              "podmonitors.monitoring.coreos.com",
              "prometheuses.monitoring.coreos.com",
              "prometheusrules.monitoring.coreos.com",
              "servicemonitors.monitoring.coreos.com",
              "thanosrulers.monitoring.coreos.com",
              "probes.monitoring.coreos.com"
            ],
            "resources": [
              "customresourcedefinitions"
            ],
            "verbs": [
              "get",
              "update"
            ]
          },
          {
            "apiGroups": [
              "monitoring.coreos.com"
            ],
            "resources": [
              "alertmanagers",
              "alertmanagers/finalizers",
              "alertmanagerconfigs",
              "prometheuses",
              "prometheuses/finalizers",
              "thanosrulers",
              "thanosrulers/finalizers",
              "servicemonitors",
              "podmonitors",
              "probes",
              "prometheusrules"
            ],
            "verbs": [
              "*"
            ]
          },
          {
            "apiGroups": [
              "apps"
            ],
            "resources": [
              "statefulsets"
            ],
            "verbs": [
              "*"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "configmaps",
              "secrets"
            ],
            "verbs": [
              "*"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "pods"
            ],
            "verbs": [
              "list",
              "delete"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "services",
              "services/finalizers",
              "endpoints"
            ],
            "verbs": [
              "get",
              "create",
              "update",
              "delete"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "nodes"
            ],
            "verbs": [
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "namespaces"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "networking.k8s.io"
            ],
            "resources": [
              "ingresses"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          }
        ]
      }
    },
    "release_name": "prometheus",
    "scaleExternalInterface": [],
    "securityContext": {
      "readOnlyRootFilesystem": false
    },
    "service": {
      "alertmanager": {
        "enabled": true,
        "loadBalancerIP": "",
        "ports": {
          "alertmanager": {
            "enabled": true,
            "port": 9093,
            "protocol": "http",
            "targetPort": 9093
          }
        },
        "selectorLabels": {
          "alertmanager": "{{ template \"kube-prometheus.alertmanager.fullname\" . }}",
          "app.kubernetes.io/name": "alertmanager"
        },
        "type": "LoadBalancer"
      },
      "main": {
        "enabled": true,
        "loadBalancerIP": "",
        "ports": {
          "main": {
            "port": 9090,
            "protocol": "http",
            "targetPort": 9090
          }
        },
        "selectorLabels": {
          "app.kubernetes.io/name": "prometheus",
          "prometheus": "{{ template \"kube-prometheus.prometheus.fullname\" . }}"
        },
        "type": "LoadBalancer"
      },
      "thanos": {
        "enabled": true,
        "ports": {
          "thanos": {
            "enabled": true,
            "port": 10901,
            "protocol": "http",
            "targetPort": 10901
          }
        },
        "selectorLabels": {
          "app.kubernetes.io/name": "prometheus",
          "prometheus": "{{ template \"kube-prometheus.prometheus.fullname\" . }}"
        }
      }
    },
    "serviceAccount": {
      "main": {
        "enabled": true,
        "primary": true
      }
    },
    "serviceList": [],
    "thanosImage": {
      "repository": "quay.io/thanos/thanos",
      "tag": "v0.35.0@sha256:fa1d28718df00b68d6ad85d7c7d4703bd9f59e5cd8be8da6540ea398cf701a1f"
    },
    "workload": {
      "main": {
        "enabled": false,
        "podSpec": {
          "containers": {
            "main": {
              "enabled": false,
              "probes": {
                "liveness": {
                  "enabled": false
                },
                "readiness": {
                  "enabled": false
                },
                "startup": {
                  "enabled": false
                }
              }
            }
          }
        }
      }
    }
  },
  "container_images_update_available": false,
  "dataset": "HomeNas/ix-applications/releases/prometheus",
  "human_latest_version": "18.2.9",
  "human_version": "2.52.0_18.2.9",
  "id": "prometheus",
  "info": {
    "deleted": "",
    "description": "Upgrade \"prometheus\" failed: cannot patch \"prometheus-kube-state-metrics\" with kind Deployment: Deployment.apps \"prometheus-kube-state-metrics\" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\"app.kubernetes.io/instance\":\"prometheus\", \"app.kubernetes.io/name\":\"kube-state-metrics\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable",
    "first_deployed": "2024-01-18T10:43:10.336131251-05:00",
    "last_deployed": "2025-03-11T12:43:37.660585714-04:00",
    "notes": "\n# Thank you for installing prometheus by TrueCharts.\n\n\n## Connecting externally\nYou can use this Chart by opening one of the following links in your browser:\n- host: $node_ip\npath: /\nport: \"9090\"\nportalName: open\nprotocol: http\nurl: http://$node_ip:9090/\nuseNodeIP: true\n## Sources for prometheus\n- https://github.com/prometheus-community/helm-charts\n- https://github.com/prometheus-operator/kube-prometheus\n- https://github.com/truecharts/charts/tree/master/charts/premium/prometheus\n- https://hub.docker.com/r/bitnami/alertmanager\n- https://hub.docker.com/r/bitnami/prometheus\n- https://quay.io/thanos/thanos\n\nSee more for **prometheus** at (https://truecharts.org/charts/premium/prometheus)\n\n## Documentation\nPlease check out the TrueCharts documentation on:\nhttps://truecharts.org\n\nOpenSource can only exist with your help, please consider supporting TrueCharts:\nhttps://truecharts.org/sponsor\n",
    "status": "failed"
  },
  "name": "prometheus",
  "namespace": "ix-prometheus",
  "path": "/mnt/HomeNas/ix-applications/releases/prometheus",
  "pod_status": {
    "available": 3,
    "desired": 3
  },
  "portals": {
    "open": [
      "http://192.168.0.2:9090/"
    ]
  },
  "status": "ACTIVE",
  "update_available": false,
  "used_ports": [
    {
      "port": 9093,
      "protocol": "TCP"
    },
    {
      "port": 9090,
      "protocol": "TCP"
    }
  ],
  "version": 27
}